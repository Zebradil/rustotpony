name: upload-release-assets

on:
  release:
    types: [created]

jobs:
  assets:
    name: Build and upload release assets
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [macos-latest]

    steps:
    - name: Print trigger
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Install latest stable rust toolchain
      if: matrix.os == 'macos-latest'
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable

    - uses: actions/checkout@v1
      name: Checkout code

    - name: Restore cache
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.OS }}-target-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.OS }}-target-${{ github.ref }}-
          ${{ runner.OS }}-target-master-
          ${{ runner.OS }}-target-

    - name: Build release
      run: cargo build --release

    - name: List dir
      run: ls -lR

    - name: Upload release asset
      uses: zebradil/upload-release-asset@investigation
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.assets_url }}
        asset_path: ./target/release/totp
        asset_name: totp-${{ runner.OS }}
        asset_content_type: application/octet-stream
